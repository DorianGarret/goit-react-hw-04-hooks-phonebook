{"version":3,"sources":["components/Form/Form.styled.js","components/Form/Form.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/App/App.styled.js","components/App/App.jsx","hooks/useLocalStorage.js","index.js"],"names":["FormContainer","Label","Input","Icon","MdPersonAdd","Button","setInputName","Form","onSubmit","useState","name","setName","number","setNumber","handleChange","event","target","value","resetState","preventDefault","type","pattern","title","required","autoComplete","onChange","FilterContainer","Filter","List","MdDeleteForever","ListItem","ContactList","contacts","onDeleteContact","map","id","onClick","Container","Phonebook","Contacts","Empty","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","visibleContact","normalizedFilter","toLowerCase","item","includes","getVisibleContacts","data","find","RegExp","test","alert","contact","nanoid","length","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61cbb2b9.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\nimport { MdPersonAdd } from 'react-icons/md';\n\nexport const FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: 500px;\n\n  margin: 0 auto;\n\n  border: 1px solid var(--bs-gray-600);\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  margin: 10px 0;\n`;\n\nexport const Icon = styled(MdPersonAdd)`\n  font-size: 20px;\n  margin-right: 10px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n\n  padding: 10px;\n\n  background-color: var(--bs-cyan);\n  color: var(--bs-light);\n\n  box-shadow: 0 3px var(--bs-info);\n  border-radius: 5px;\n\n  &:hover {\n    background-color: var(--bs-info);\n    box-shadow: 0 3px var(--bs-cyan);\n  }\n\n  &:active {\n    margin-top: 2px;\n    margin-bottom: -2px;\n    background-color: var(--bs-cyan);\n    box-shadow: 0 -2px 0 0 var(--bs-info);\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FormContainer, Label, Input, Button, Icon } from './Form.styled';\nconst setInputName = {\n  NAME: 'name',\n  NUMBER: 'number',\n};\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case setInputName.NAME:\n        setName(value);\n        break;\n      case setInputName.NUMBER:\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ name, number });\n    resetState();\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name={setInputName.NAME}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          autoComplete=\"off\"\n          value={name}\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name={setInputName.NUMBER}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          autoComplete=\"off\"\n          value={number}\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\">\n        <Icon />\n        Add contact\n      </Button>\n    </FormContainer>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled/macro';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 300px;\n  margin: 0 auto;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 10px;\n\n  span {\n    margin-bottom: 10px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { FilterContainer, Label } from './Filter.styled';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <FilterContainer>\n      <Label>\n        <span>Find contacts by name</span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          autoComplete=\"off\"\n          value={value}\n          onChange={onChange}\n        />\n      </Label>\n    </FilterContainer>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled/macro';\nimport { MdDeleteForever } from 'react-icons/md';\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin: 0 auto;\n  margin-top: 30px;\n  width: 500px;\n`;\n\nexport const Icon = styled(MdDeleteForever)`\n  font-size: 20px;\n  margin-right: 10px;\n`;\nexport const ListItem = styled.li`\n  display: flex;\n  padding: 10px;\n  align-items: center;\n  &:not(:last-of-type) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 10px;\n  margin-left: 20px;\n\n  background-color: var(--bs-cyan);\n  color: var(--bs-light);\n\n  box-shadow: 0 3px var(--bs-info);\n  border-radius: 5px;\n\n  &:hover {\n    background-color: var(--bs-info);\n    box-shadow: 0 3px var(--bs-cyan);\n  }\n\n  &:active {\n    margin-top: 2px;\n    margin-bottom: -2px;\n    background-color: var(--bs-cyan);\n    box-shadow: 0 -2px 0 0 var(--bs-info);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { List, ListItem, Button, Icon } from './ContactList.styled';\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <p>{`${name}: ${number}`}</p>\n          <Button onClick={() => onDeleteContact(id)}>\n            <Icon />\n            Delete\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\n  width: 1200px;\n  margin: 0 auto;\n  padding-left: 20px;\n  padding-right: 20px;\n`;\n\nexport const Phonebook = styled.h1`\n  text-align: center;\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nexport const Contacts = styled.h2`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  text-align: center;\n`;\n\nexport const Empty = styled.p`\n  text-align: center;\n  padding-top: 30px;\n`;\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport Form from 'components/Form';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport { Container, Phonebook, Contacts, Empty } from './App.styled';\n\nconst LOCALE_STORAGE_KEY = 'contacts';\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage(LOCALE_STORAGE_KEY, []);\n  const [filter, setFilter] = useState('');\n\n  const handleChangeContacts = data => {\n    const checkContactsMatch = contacts.find(({ name }) => {\n      return RegExp(`^${data.name}$`, 'gi').test(name);\n    });\n\n    if (checkContactsMatch) {\n      return alert(`${data.name} is already in contacts`);\n    }\n\n    const contact = { id: nanoid(), ...data };\n    setContacts([contact, ...contacts]);\n  };\n\n  const changeFilter = event => {\n    setFilter(event.target.value);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevState => [\n      ...prevState.filter(({ id }) => id !== contactId),\n    ]);\n    setFilter('');\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const visibleContact = getVisibleContacts();\n\n  return (\n    <Container>\n      <Phonebook>Phonebook</Phonebook>\n      <Form onSubmit={handleChangeContacts} />\n      <Contacts>Contacts</Contacts>\n      <Filter value={filter} onChange={changeFilter} />\n      {contacts.length > 0 && (\n        <ContactList\n          contacts={visibleContact}\n          onDeleteContact={deleteContact}\n        />\n      )}\n      {!contacts.length && <Empty>Phonebook is Empty</Empty>}\n    </Container>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(\n    () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue,\n  );\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}